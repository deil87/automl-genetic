evolution {
  templateDimension {
    name = "Template evolution"
    enabled = true
    populationSize = 7
    poolOfSimpleModels = ["logistic_regression", "decision_tree"]
    poolOfEnsemblingModels = ["bagging", "stacking"]
    maxEnsembleDepth = 3
    maxNumberOfMutationAttempts = 50
    pivotBetweenStructureAndHPMutations = 0.2 // meaning that with probbability of 0.8 we will mutate HPs
    validationStrategy = "tt" // "tt" - train test
    globalCVNumFolds = 5
    testSplitRatio = 0.3 // maybe unnecessary
  }

  evaluation { // move it inside templateDimension
    regression {

    }
    multiclass {
      metric = "logloss" // f1
    }
  }

  hyperParameterDimension {
    enabled = true
    name = "Hyper-parameter evolution"
    populationSize = 10
    numOfEvolutionsPerGen = 5
    evaluationSamplingRatio = 0.5
    randomMutationFrequency = 0.2
  }

  hpGridSearch = true // move to templateDimension
}

consistencyCheck = true

sqliteSber = {
  url = "jdbc:sqlite:/Users/deil/Development/sqliteData/test.db"
  driver = org.SQLite.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

kamon.datadog {
  subscriptions {
    gauge           = [ "**" ]
    counter         = [ "**" ]
  }
    hostname = "127.0.0.1"
    port = 8125

    flush-interval = 1 second

    max-packet-size = 1024 bytes

    report-system-metrics = true

    application-name = "kamon_test"
}

kamon.prometheus {

  # Enable or disable publishing the Prometheus scraping enpoint using a embedded server.
  start-embedded-http-server = yes

  buckets {
    default-buckets = [
      10,
      30,
      100,
      300,
      1000,
      3000,
      10000,
      30000,
      100000
    ]

    time-buckets = [
      0.005,
      0.01,
      0.025,
      0.05,
      0.075,
      0.1,
      0.25,
      0.5,
      0.75,
      1,
      2.5,
      5,
      7.5,
      10
    ]

    information-buckets = [
      512,
      1024,
      2048,
      4096,
      16384,
      65536,
      524288,
      1048576
    ]
  }


  embedded-server {
    # Hostname and port used by the embedded web server to publish the scraping enpoint.
    hostname = 0.0.0.0
    port = 9095
  }

  subscriptions {
    histogram        = [ "**" ]
    min-max-counter  = [ "**" ]
    gauge            = [ "**" ]
    counter          = [ "**" ]
    trace            = [ "**" ]
    trace-segment    = [ "**" ]
    akka-actor       = [ "**" ]
    akka-dispatcher  = [ "**" ]
    akka-router      = [ "**" ]
    system-metric    = [ "**" ]
    http-server      = [ "**" ]
    spray-can-server = [ "**" ]
  }
}